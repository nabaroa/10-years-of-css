@import "../node_modules/nakds/dist/css/nakDS.min.css";

:root {
  --color: #e84d7a;
}

/* Use logical values and properties instead and show rtl in demo. Also in nakDS */

.nk-slider {
  display: flex;
  overflow: hidden;
}

.nk-slide {
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100vh;
  min-width: 100vw;
  max-height: 100vh;
}

.nk-slide__container {
  width: 800px;
}

.nk-slider__back {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  width: 100px;
  height: 50vh;
  inset-inline-end: 0;
  /* right: 0; */
  top: 0;
  left: initial;
  opacity: 0.3;
  z-index: 3;

  &:hover {
    opacity: 1;
  }
}

.nk-slider__next {
  display: flex;
  align-items: flex-start;
  justify-content: center;
  background: 0.3 (0, 0, 0);
  width: 100px;
  height: 50vh;
  right: 0;
  bottom: 0;
  left: initial;
  opacity: 0.3;
  z-index: 3;
  /* visibility: hidden; */
  &:hover {
    opacity: 1;
    /* visibility: visible; */
  }
}

.nk-bg-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 2;
  object-fit: contain;
  pointer-events: none;
}

.nk-bg-image--left {
  object-position: left;
}

.nk-heading--1{
  margin-bottom: var(--xxxx-large);
}

/* grid */

.nk-grid-2 {
  & img {
    width: 50vw;
  }
}

/* Images */

.nk-object-fit--cover {
  max-width: 100vw;
  width: 100vw;
  height: 100vh;
  object-fit: cover;
}

.ruler {
  position: fixed;
  /* transform: rotate(90deg); */
  left: 0;
  top: 0;
  /* right: 0; */
  width: 100vw;
  /* bottom: 0; */
  /* height: 100vh; */
  z-index: 1;
  opacity: 0.3;
  pointer-events: none;
}

/* Counter */
/* https://codepen.io/alexerlandsson/details/Kzabyr */
/* It's not accesible */

:root {
  --timer-size: 50px;
  --timer-border-radius: calc(var(--timer-size) / 10);
}

.counter {
  font-family: monospace, sans-serif;
  position: fixed;
  top: 3%;
  left: 6%;
  color: #000;
  overflow: hidden;

  &:hover {
    overflow: visible;
    outline: 3px solid var(--color);
  }
}

.timer {
  height: var(--timer-size);
  float: left;
  padding-left: 1ch;
  padding-right: 1ch;
}

.timer-val-container {
  float: left;
  &.hours-tenth {
    animation: count-10 360000s steps(10, end) infinite;
  }
  &.hours-single {
    animation: count-10 36000s steps(10, end) infinite;
  }
  &.minutes-tenth {
    animation: count-6 3600s steps(6, end) infinite;
  }
  &.minutes-single {
    animation: count-10 600s steps(10, end) infinite;
  }
  &.seconds-tenth {
    animation: count-6 60s steps(6, end) infinite;
  }
  &.seconds-single {
    animation: count-10 10s steps(10, end) infinite;
  }
}

.timer-val {
  width: (var(--timer-size) / 2);
  height: var(--timer-size);
  text-align: center;
  line-height: var(--timer-size);
  text-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
}

/* //Keyframes */

@keyframes count-6 {
  to {
    transform: translateY(calc(var(--timer-size) * -6));
  }
}

@keyframes count-10 {
  to {
    transform: translateY(calc(var(--timer-size) * -10));
  }
}

.nk-progress {
  position: fixed;
  top: 0;
  left: 0;
  height: 8px;
  width: 100vh;

  & .nk-progress__bar {
    position: absolute;
    height: 100%;
    width: 0px;
    top: 0;
    background: red;
    background: linear-gradient(#ff512f, #dd2476);
    animation: progress 2400s;
    animation-fill-mode: forwards;
  }
}

@keyframes progress {
  to {
    width: 100vh;
  }
}

.pomodoro-color {
  position: absolute;
  z-index: -1;
  opacity: 0;
  /* animation: opacity 10s forwards;
  animation-fill-mode: forwards; */
}

.pomodoro:hover {
  & .pomodoro-color {
    animation: opacity 10s forwards;
    animation-fill-mode: forwards;
  }

  & .pomodoro-color--red {
    animation-delay: 5s;
  }
}

.pomodoro-color--shadow {
  top: 65vh;

  /* animation: opacity 10s; */
  /* animation-fill-mode: forwards; */
  /* animation-delay: 50s; */
}
@keyframes opacity {
  to {
    opacity: 1;
  }
}

.show {
  font-family: monospace, sans-serif;
  position: fixed;
  top: 0;
  left: 50vw;
  font-size: 0.8em;
  transform: rotate(-45deg);
  transform-origin: bottom right;
  opacity: 0;
  animation: opacity 1s 10s;
  animation-fill-mode: forwards;
  text-align: end;
}

.show--custom-properties {
  animation: opacity 1s 2s;
  animation-fill-mode: forwards;
}

.show--postcss {
  left: 60vw;
  animation: opacity 1s 3s;
  animation-fill-mode: forwards;
}

/* Specific to this project */

.bg-cover:before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: white;
  z-index: 2;
}

.arrow-next {
  transform: rotate(180deg);
}

.nk-filter--greyscale {
  &:hover {
    filter: grayscale(0);
  }
}

.cp_embed_wrapper {
  width: 100vw;
  height: 50vh;
  & iframe {
    height: 100%;
  }
}

.notes {
  position: absolute;
  bottom: 2em;
  color: red;
}

